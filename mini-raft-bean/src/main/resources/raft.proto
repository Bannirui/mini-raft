syntax = "proto3";

package com.github.bannirui.raft.bean.proto;
option java_package = "com.github.bannirui.raft.bean.proto";
option java_outer_classname = "RaftProto";

// rpc响应
enum ResCode{
  SUCCESS    = 0;
  FAIL       = 1;
  NOT_LEADER = 2;
}

enum EntryType{
  DATA          = 0;
  CONFIGURATION = 1;
}

// 节点信息
message Endpoint{
  optional string host = 1;
  optional uint32 port = 2;
}

// 节点信息
message Server{
  optional uint32   server_id = 1;
  optional Endpoint endpoint  = 2;
}

// 集群信息
message Configuration{
  repeated Server servers = 1;
}

message LogMetaData{
  optional uint64 current_term    = 1;
  optional uint32 voted_for       = 2;
  optional uint64 first_log_index = 3;
  optional uint64 commit_index    = 4;
}

message SnapshotMetaData{
  optional uint64        last_included_index = 1;
  optional uint64        last_included_term  = 2;
  optional Configuration configuration       = 3;
}

message LogEntry{
  optional uint64    term  = 1;
  optional uint64    index = 2;
  optional EntryType type  = 3;
  optional bytes     data  = 4;
}

message VoteRequest{
  optional uint32 server_id      = 1;
  optional uint64 term           = 2;
  optional uint64 last_log_term  = 3;
  optional uint64 last_log_index = 4;
}

message VoteResponse{
  optional uint64 term    = 1;
  optional bool   granted = 2;
}

message AppendEntriesRequest{
  optional uint32   server_id      = 1;
  optional uint64   term           = 2;
  optional uint64   prev_log_index = 3;
  optional uint64   prev_log_term  = 4;
  optional uint64   commit_index   = 5;
  repeated LogEntry entries        = 6;
}

message AppendEntriesResponse{
  optional ResCode res_code       = 1;
  optional uint64  term           = 2;
  optional uint64  last_log_index = 3;
}

message InstallSnapshotRequest{
  optional uint32           server_id          = 1;
  optional uint64           term               = 2;
  optional SnapshotMetaData snapshot_meta_data = 3;
  optional string           file_name          = 4;
  optional uint64           offset             = 5;
  optional bytes            data               = 6;
  optional bool             is_first           = 7;
  optional bool             is_last            = 8;
}

message InstallSnapshotResponse{
  optional ResCode res_code = 1;
  optional uint64  term     = 2;
}

message GetLeaderRequest{}

message GetLeaderResponse{
  optional ResCode  res_code = 1;
  optional string   res_msg  = 2;
  optional Endpoint leader   = 3;
}

message AddPeersRequest{
  repeated Server servers = 1;
}

message AddPeersResponse{
  optional ResCode res_code = 1;
  optional string  res_msg  = 2;
}

message RemovePeersRequest{
  repeated Server servers = 1;
}

message RemovePeersResponse{
  optional ResCode res_code = 1;
  optional string  res_msg  = 2;
}

message GetConfigurationRequest{
}

message GetConfigurationResponse{
  optional ResCode res_code = 1;
  optional string  res_msg  = 2;
  optional Server  leader   = 3;
  repeated Server  servers  = 4;
}
